- name: remove existing cert_info directory
  ansible.builtin.file:
    path: /tmp/cert_info
    state: absent

- name: recreate working directory
  ansible.builtin.file:
    path: /tmp/cert_info
    state: directory

- name: to list certificates
  shell: ls -ltr /etc/pki/tls/certs >> /tmp/cert_info/cert_list
  register: cert_list_output

- name: Read cert_list file and filter .crt files
  ansible.builtin.slurp:
    src: /tmp/cert_info/cert_list
  register: cert_list_raw

- name: Decode and split cert_list content into lines
  set_fact:
    cert_list_lines: "{{ cert_list_raw.content | b64decode | splitlines() }}"

- name: Extract certificate names ending with .crt
  set_fact:
    cert_names: "{{ cert_list_lines | select('search', '\\.crt$') | list }}"

#- name: Extract .crt files from cert_list
#  set_fact:
#      cert_names: "{{ cert_list_raw.content | b64decode | splitlines() | select('search', '\\.crt$') | list }}"

- name: Display the names of the certificates
  debug:
    var: cert_names


#- name: Display the found certificate files
#  debug:
#    var: cert_files.files

#- name: Extract Cert Expiry Date
#  shell: openssl x509 -in ca-bundle.crt -noout -enddate | cut -d= -f2
#  register: expiry_date


#- name: To create customcertlog file
#  file:
#    path: /tmp/customcert.log
#    mode: '0644'
#    state: directory
#  ignore_errors: yes

#- name: Extract details from each certificate
#  shell:
#    cert_name=$(basename {{ item.path }})
#    #cert_expiry=$(openssl x509 -in {{ item.path }} -noout -enddate | cut -d= -f2)
#    #cert_san=$(openssl x509 -in {{ item.path }} -noout -ext subjectAltname | cut -d= f2 | tr -d '\n\' | sed 's/,/ /g')
#    echo "Cert Name: $cert_name" >> /tmp/customcert.log
#  loop: "{{ cert_files.files }}"
#  when: cert_files.matched > 0
#  register: cert_details


#
#- name: Extract certname details
#  shell:
#    cert_name=$(basename {{ item.path }})
#  loop: "{{ cert_files.files }}"
#  register : cert_name_output
#
#- name: To print cert_name
#  debug:
#    var: cert_name_output




